<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.zjw.blog.deal.backup.dao.BackupMapper" >
  <resultMap id="BaseResultMap" type="org.zjw.blog.deal.backup.entity.Backup" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="backupName" property="backupName" jdbcType="VARCHAR" />
    <result column="backupType" property="backupType" jdbcType="VARCHAR" />
    <result column="backupPath" property="backupPath" jdbcType="VARCHAR" />
    <result column="createDate" property="createDate" jdbcType="TIMESTAMP" />
    <result column="deleteFlag" property="deleteFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, backupName, backupType, backupPath, createDate, deleteFlag
  </sql>
  <!-- 多条件查询 -->
  <select id="selectByCondition" parameterType="map" resultMap="BaseResultMap">
  	SELECT 
  	<include refid="Base_Column_List"></include> 
  	FROM `backup` 
  	<where>
	<if test="backupType !=null">
	backupType=#{backupType}
	</if>
  	<if test="start!=null and rows!=null">
  	LIMIT #{start},#{rows}
  	</if>
  	</where>
  </select>
  <!-- 多条件记录数 -->
  <select id="selectCountByCondition" parameterType="map" resultType="int">
  	SELECT 
  	COUNT(*) 
  	FROM `backup`
  </select> 
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from backup
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from backup
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.zjw.blog.deal.backup.entity.Backup" >
    insert into backup (id, backupName, backupType, 
      backupPath, createDate, deleteFlag
      )
    values (#{id,jdbcType=INTEGER}, #{backupName,jdbcType=VARCHAR}, #{backupType,jdbcType=VARCHAR}, 
      #{backupPath,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{deleteFlag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.zjw.blog.deal.backup.entity.Backup" >
    insert into backup
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="backupName != null" >
        backupName,
      </if>
      <if test="backupType != null" >
        backupType,
      </if>
      <if test="backupPath != null" >
        backupPath,
      </if>
      <if test="createDate != null" >
        createDate,
      </if>
      <if test="deleteFlag != null" >
        deleteFlag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="backupName != null" >
        #{backupName,jdbcType=VARCHAR},
      </if>
      <if test="backupType != null" >
        #{backupType,jdbcType=VARCHAR},
      </if>
      <if test="backupPath != null" >
        #{backupPath,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.zjw.blog.deal.backup.entity.Backup" >
    update backup
    <set >
      <if test="backupName != null" >
        backupName = #{backupName,jdbcType=VARCHAR},
      </if>
      <if test="backupType != null" >
        backupType = #{backupType,jdbcType=VARCHAR},
      </if>
      <if test="backupPath != null" >
        backupPath = #{backupPath,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null" >
        deleteFlag = #{deleteFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.zjw.blog.deal.backup.entity.Backup" >
    update backup
    set backupName = #{backupName,jdbcType=VARCHAR},
      backupType = #{backupType,jdbcType=VARCHAR},
      backupPath = #{backupPath,jdbcType=VARCHAR},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      deleteFlag = #{deleteFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>